/* Media queries Breakpoint mixins */
// can use later for our layout
@mixin for-mobile-layout {
  @media (max-width: $break-narrow) {
    @content;
  }
}

@mixin for-narrow-layout {
  @media (min-width: $break-narrow) {
    @content;
  }
}

@mixin for-normal-layout {
  @media (min-width: $break-normal) {
    @content;
  }
}
@mixin for-home-layout {
  @media (max-width: $break-ultra-wide) {
    // background-color: blue;
    .hero{
      .h1-container{
        position: absolute;
        font-size: rem(82px);
        font-weight: 800;
        color: white;
        margin-top: 20px;
        // line-height: 20px;
      }

    }
    
    @content;
  }
  @media (max-width: $break-wide) {
    .hero{
      .h1-container{
        position: absolute;
        font-size: rem(72px);
        font-weight: 800;
        color: white;
        margin-top: 20px;
        // line-height: 20px;
      }

    }
    .home-container {
    margin: 0;
    display: flex;
    overflow-x: scroll !important;
    overflow-y: hidden;
    white-space: nowrap;
    margin-top: 20px;
    &::-webkit-scrollbar {
      display: none;
    }
    &:hover{
      &::-webkit-scrollbar {
        display: block;
        height: 4px;
        width: 4px;
        border:1px solid #d5d5d5 ;
      }
      &::-webkit-scrollbar-track {
        border-radius: 0;
        background: #eeeeee;
      }
      
      &::-webkit-scrollbar-thumb {
        border-radius: 0;
        background: #b0b0b0;
      }
    }
    }
    
  }
}

@mixin for-normal-layout {
  @media (min-width: $break-normal) {
    @content;
  }
}

@mixin for-wide-layout {
  @media (min-width: $break-wide) {
    @content;
  }
}

/* Media  Mixins */

// aspect ratio mixin

@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  &:before {
    content: "";
    display: block;
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  > img {
    height: 100%;
    object-fit: cover;
  }
}

// Mixin for removing hover efects on iphone screen

@mixin hover-supported {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}
